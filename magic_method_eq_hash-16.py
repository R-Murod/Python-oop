# Магические методы __eq__ and __hash__
# Функция hash() и хэши объектов
# Если объекты a == b, то равен и их хэш
# Равные хэши: hash(a) == hash(b) не гарантируют равенства объектов
# Если хэши не равны: hash(a) != hash(b), то объекты точно не равны
# Хэша можно вычислять только для неизменяемых объектов(int, float, str etc)
# Изменяемые объекты не является хэшируемым


class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def __eq__(self, other):
        return self.x == other.x and self.y == other.y

    def __hash__(self):  # вызываться когда используем p1 and p2
        return hash((self.x, self.y))


p1 = Point(1, 2)
p2 = Point(1, 2)
print(hash(p1), hash(p2), sep="\n")  # когда мы переопределяем в методе __eq__ - hash() не будеть работать, мы это будем исправить
d = {}
d[p1] = 1
d[p2] = 2
print(d)  # с помощью __hash__ нам выдаёт один объект, без этого нам выдаёт разные объекты (это при условий когда значения равные)